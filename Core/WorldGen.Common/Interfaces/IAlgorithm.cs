
using System.Collections.Generic;
using WorldGen.Common.Enums;

namespace WorldGen.Common.Interfaces
{
    /// <summary>
    /// 
    /// </summary>
    public abstract class IAlgorithm
    {
        #region FIELDS

        /// <summary>
        /// Flag to indicate if debug mode is set
        /// </summary>
        protected bool debugMode;

        /// <summary>
        /// Collection of map types that can be generated by this algorithm
        /// </summary>
        protected HashSet<MapTypes> outputMapList;

        #endregion

        #region PROPERTIES

        public bool DebugMode
        {
            get { return debugMode; }
            set { debugMode = value; }
        }

        #endregion

        #region METHODS

        /// <summary>
        /// Mass parameter initializer
        /// </summary>
        /// <param name="parameters">Array of parameters</param>
        public abstract void Initialize(BE.InitializeParams parameters);

        /// <summary>
        /// Sets a single parameter
        /// </summary>
        /// <param name="paramType"> Parameter type</param>
        /// <param name="value"> Parameter value</param>
        public abstract void SetParameter(AlgorithmParameters paramType, object value);

        /// <summary>
        /// Creates a map
        /// </summary>
        /// <returns>A map cretad by the algorithm</returns>
        public abstract IMap Create();

        #endregion
    }
}
